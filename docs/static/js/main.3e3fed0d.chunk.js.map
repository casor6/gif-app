{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAXW,SAAEC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAAEb,IAEEc,EDRwBK,CAAanB,GAAhCU,EAPyB,EAO9BJ,KAAaO,EAPiB,EAOjBA,QAEpB,OACI,qCACI,6BAAKb,IACHa,GAAW,wCACb,qBAAKjB,UAAU,YAAf,SAIQc,EAAOF,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEpBzB2B,EAAe,WAAM,MAGMzC,mBAAS,CAAC,YAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCtBlCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e3fed0d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = ( e ) => {\n\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = ( e ) => {\n\n        e.preventDefault()\n\n        if( inputValue.trim().length > 2) {\n            setCategories(cats => [ inputValue, ...cats])\n            setInputValue('')\n        }\n        \n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange= { handleInputChange }\n            />   \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs = async( category ) => {\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9X9jutXGOCYmgFNUQ5dzAmVJ0RsvIgNk`\n    const resp = await fetch(url)\n    const {data} = await resp.json()\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs\n}","import React, { useEffect, useState } from 'react'\nimport { GifGridItem } from './GifGridItem'\nimport { getGifs } from '../helpers/getGifs'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n    // useEffect( () => {\n    //     getGifs( category)\n    //         .then( setImages )\n    // }, [ category ])\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h2>{category}</h2>\n            { loading && <p>Loading</p>}\n            <div className=\"card-grid\">\n                \n                \n                { \n                    images.map(img => \n                        (<GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />)\n                    )\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [ category ])\n\n    return state\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Gatitos', 'Dragon Ball']\n    const [categories, setCategories] = useState(['Gatitos'])\n\n    // const handleAdd = () => {\n\n    //     // setCategories([...categories, 'Hunter'])\n    //     setCategories(cate => [...categories, 'Hunter'])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n\n\n            <ol>\n                {\n                    categories.map(category => \n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}